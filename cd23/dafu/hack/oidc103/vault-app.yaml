apiVersion: apps/v1
kind: Deployment
metadata:
  name: c101-vault1.12.3-c846916d
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: c101-vault1.12.3-c8acb366
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: c101-vault1.12.3-c8acb366
    spec:
      automountServiceAccountToken: false
      containers:
        - args:
            - sh
            - -c
            - |
              #!/bin/sh
              # https://developer.hashicorp.com/vault/tutorials/auth-methods/oidc-identity-provider
              env
              apk add jq
              /usr/local/bin/docker-entrypoint.sh vault server -dev &
              sleep 15
              export VAULT_ADDR=http://127.0.0.1:8200
              export VAULT_TOKEN=myroot
              env
              id
              vault auth enable userpass
              vault write auth/userpass/users/end-user   password="password"   token_ttl="1h"
              vault write identity/entity   name="end-user"   metadata="email=vault@hashicorp.com"   metadata="phone_number=123-456-7890"   disabled=false
              #
              ENTITY_ID=$(vault read -field=id identity/entity/name/end-user)
              #
              vault write identity/group     name="engineering"     member_entity_ids="$ENTITY_ID"
              #
              GROUP_ID=$(vault read -field=id identity/group/name/engineering)
              #
              USERPASS_ACCESSOR=$(vault auth list -detailed -format json | jq -r '.["userpass/"].accessor')
              #
              vault write identity/entity-alias     name="end-user"     canonical_id="$ENTITY_ID"     mount_accessor="$USERPASS_ACCESSOR"
              # create an assignment
              vault write identity/oidc/assignment/my-assignment     entity_ids="$ENTITY_ID"     group_ids="$GROUP_ID"
              # create a oidc key
              vault write identity/oidc/key/my-key     allowed_client_ids="*"     verification_ttl="2h"     rotation_period="1h"     algorithm="RS256"
              # create oidc client foo101
              vault write identity/oidc/client/foo101     redirect_uris="http://localhost:8000/callback-vault"     assignments="my-assignment"     key="my-key"     id_token_ttl="30m"     access_token_ttl="1h"
              #
              CLIENT_ID=$(vault read -field=client_id identity/oidc/client/foo101)
              # Create a Vault OIDC provider
              USER_SCOPE_TEMPLATE='{
                "username": {{identity.entity.name}},
                "contact": {
                    "email": {{identity.entity.metadata.email}},
                    "phone_number": {{identity.entity.metadata.phone_number}}
                }
              }'
              #
              vault write identity/oidc/scope/user   description="The user scope provides claims using Vault identity entity metadata"   template="$(echo $USER_SCOPE_TEMPLATE | base64 -)"
              #
              GROUPS_SCOPE_TEMPLATE='{
                "groups": {{identity.entity.groups.names}}
              }'
              #
              vault write identity/oidc/scope/groups   description="The groups scope provides the groups claim using Vault group membership"   template="$(echo $GROUPS_SCOPE_TEMPLATE | base64 -)"
              #
              vault write identity/oidc/provider/my-provider   allowed_client_ids="$CLIENT_ID"   scopes_supported="groups,user"

              CLIENT_SECRET=$(vault read -field=client_secret identity/oidc/client/foo101)
              echo $CLIENT_ID > /tmp/client-id
              echo $CLIENT_SECRET > /tmp/client-secret
              # Block on vault
              wait
          env:
            - name: VAULT_DEV_ROOT_TOKEN_ID
              value: myroot
            - name: SKIP_CHOWN
              value: "true"
            - name: SKIP_SETCAP
              value: "true"
            - name: VAULT_DEV_LISTEN_ADDRESS
              value: "[::]:8200"
            - name: VAULT_API_ADDR
              value: http://vault101.default.svc:8200
          image: vault:1.12.3
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8200
          resources:
            limits:
              cpu: 1000m
              memory: 640Mi
            requests:
              cpu: 500m
              memory: 320Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8200
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
---
apiVersion: v1
kind: Service
metadata:
  name: vault101
spec:
  externalIPs: []
  ports:
    - port: 8200
  selector:
    cdk8s.io/metadata.addr: c101-vault1.12.3-c8acb366
  type: ClusterIP
